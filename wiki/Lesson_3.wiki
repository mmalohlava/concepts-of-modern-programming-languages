#summary Introduction of static meta-programming, DSLs in Clojure and Scala.
#labels Featured,Phase-Requirements

= Lesson 3 details =

== Agenda ==

 * Clojure  introduction 
     * Collections
     * Sequences
       * Lazy evaluation - infinite sequences
     * Tail-recursion
     * Desctructuring
     * Metadata
       * pre, post-conditions         
     * Interoperability with Java
       * SWT graphics
     * Higher-order functions
 * Clojure Meta-programming
     * Protocols
     * Multi-methods - inheritance - power of maps
     * Macros
 * Clojure DSLs
 * Clojure eco-system

<wiki:comment>
Examples
 * symbolic derivation in lisp http://stackoverflow.com/questions/2296385/homoiconicity-how-does-it-work
</wiki:comment>


== Preparation ==
 * Checkout the recent state of our Project from [http://code.google.com/p/concepts-of-modern-programming-languages/source/checkout SVN]
 * Install Java (if you don't have it installed) from [http://www.oracle.com/technetwork/java/javase/downloads/index.html the Java download site]
 * Grab the latest version of _Clooj IDE_ from [https://github.com/arthuredelstein/clooj/downloads Clooj download page]
 * Optionally Grab the latest version of _Leiningen_ from [https://github.com/technomancy/leiningen its download page]

== More Examples ==
 * http://www.4clojure.com/problems

== Homework ==
_TBA_