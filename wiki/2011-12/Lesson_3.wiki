#summary Introduction of static meta-programming, DSLs in Clojure and Scala.
#labels Featured,Phase-Requirements
#sidebar TOC

= Lesson 3 details =

== Agenda ==

 * Clojure  introduction 
     * Collections
     * Sequences
       * Lazy evaluation - infinite sequences
     * Tail-recursion
     * Desctructuring
     * Metadata
       * pre, post-conditions         
     * Interoperability with Java
       * SWT graphics
     * Higher-order functions
 * Clojure Meta-programming
     * Protocols
     * Multi-methods - inheritance - power of maps
     * Macros
 * Clojure DSLs
 * Clojure eco-system

<wiki:comment>
Examples
 * symbolic derivation in lisp http://stackoverflow.com/questions/2296385/homoiconicity-how-does-it-work
</wiki:comment>


== Preparation ==
 * Checkout the recent state of our project from [http://code.google.com/p/concepts-of-modern-programming-languages/source/checkout SVN]
 * Install Java (if you don't have it installed) from [http://www.oracle.com/technetwork/java/javase/downloads/index.html the Java download site]
 * Grab the latest version of _Clooj IDE_ from [https://github.com/arthuredelstein/clooj/downloads Clooj download page]
 * Optionally grab the latest version of _Leiningen_ from [https://github.com/technomancy/leiningen its download page]

== More Examples ==
 * http://www.4clojure.com/problems

== Homework ==

Write a DSL which allows users to define conversion rules specified in the following form:

{{{
(defunits-of distance :m 
  :km 1000
  :cm 1/100 
  :mm 1000
  :ft 0.3048
  :mile 1 609 )
}}}

The conversion rules are called {{{distance}}} and the base unit is {{{:m}}} representing 1 meter. A conversion rule for given unit defines a relation of the unit to meters (e.g., 1 km is 1000 m).

The macro should define a new function/macro {{{units-of-distance}}} which allow users to convert given value to given unit. For example:
{{{
(unit-of-distance 1 :km) ; shoudl return 1000
(unit-of-distance 2 :cm) ; should return 2/100
}}}

The source code of the homework is located in [http://code.google.com/p/concepts-of-modern-programming-languages/source/browse/trunk/2011-12/lesson3/homework/conversion.clj SVN].